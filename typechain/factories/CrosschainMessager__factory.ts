/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrosschainMessager,
  CrosschainMessagerInterface,
} from "../CrosschainMessager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mailbox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "origin",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sender",
        type: "bytes32",
      },
    ],
    name: "ReceivedMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "destinationDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "recipient",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "SentMessage",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_origin",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "handle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastMessage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSender",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipient",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "sendString",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60803461007457601f6105ab38819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600280546001600160a01b03191691909117905560405161051b90816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600436101561001457600080fd5b600091823560e01c908163256fec88146103b35750806332970710146102bb57806356d5d475146101415763aafa0a871461004e57600080fd5b3461013d5761005c36610440565b9363ffffffff602060018060a09796971b036002541694835192839163fa31de0160e01b8352169586600483015287602483015260606044830152818a816100a8606482018d8b6104a4565b03925af1801561013357610100575b50907f10875372a03b7e5c7d46deb548b112c09c576e378c8f2daa3370a5cbe58c41b6946060836100fa94519687968752602087015285015260608401916104a4565b0390a180f35b602090819392933d831161012c575b6101198183610407565b810103126101285790386100b7565b8580fd5b503d61010f565b82513d89823e3d90fd5b5080fd5b5090346102b85761015136610440565b82855590949192906001600160401b0381116102a45760019561017487546103cd565b601f811161025c575b508596601f83116001146101e8578287986000805160206104c68339815191529798916101dd575b50600019600385901b1c191683821b1790555b818451928392833781018781520390209363ffffffff8351921682526020820152a280f35b9050820135386101a5565b8087526020808820601f19851699909189905b8b8210610245575050846000805160206104c683398151915298999a1061022b575b50508083811b0190556101b8565b830135600019600386901b60f8161c19169055388061021d565b8085849582949589013581550194019201906101fb565b87875260208720601f840160051c8101916020851061029a575b601f0160051c019088905b82811061028f57505061017d565b888155018890610281565b9091508190610276565b634e487b7160e01b85526041600452602485fd5b80fd5b503461013d578160031936011261013d5780518260019382600154916102e0836103cd565b8083526020978894600181169081156103925750600114610354575b505061030e9250959392950382610407565b82519382859384528251928382860152825b84811061033e57505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610320565b600186528486209492508591905b81831061037a57508894505082010161030e386102fc565b85548884018501529485019487945091830191610362565b91505061030e94925060ff191682840152151560051b8201018692386102fc565b83903461013d578160031936011261013d57602091548152f35b90600182811c921680156103fd575b60208310146103e757565b634e487b7160e01b600052602260045260246000fd5b91607f16916103dc565b601f909101601f19168101906001600160401b0382119082101761042a57604052565b634e487b7160e01b600052604160045260246000fd5b90606060031983011261049f5760043563ffffffff8116810361049f5791602435916001600160401b03916044359083821161049f578060238301121561049f57816004013593841161049f576024848301011161049f576024019190565b600080fd5b908060209392818452848401376000828201840152601f01601f191601019056fe56b03e35682025b62938a6ebd5b7728b519bf7a21c94f4e7fc6969b0c3f28083a2646970667358221220e72d9941e2066737d962c40a0b8fdba4ceea4357bd76676244a7d7e6cd28967f64736f6c63430008180033";

export class CrosschainMessager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _mailbox: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrosschainMessager> {
    return super.deploy(
      _mailbox,
      overrides || {}
    ) as Promise<CrosschainMessager>;
  }
  getDeployTransaction(
    _mailbox: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_mailbox, overrides || {});
  }
  attach(address: string): CrosschainMessager {
    return super.attach(address) as CrosschainMessager;
  }
  connect(signer: Signer): CrosschainMessager__factory {
    return super.connect(signer) as CrosschainMessager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrosschainMessagerInterface {
    return new utils.Interface(_abi) as CrosschainMessagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrosschainMessager {
    return new Contract(address, _abi, signerOrProvider) as CrosschainMessager;
  }
}
