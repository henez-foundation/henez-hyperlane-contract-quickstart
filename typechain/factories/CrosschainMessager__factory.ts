/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrosschainMessager,
  CrosschainMessagerInterface,
} from "../CrosschainMessager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mailbox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "origin",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sender",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "ReceivedMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "destinationDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "recipient",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "SentMessage",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_origin",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "handle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastMessage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSender",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipient",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "sendString",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60803461007457601f6105b438819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600280546001600160a01b03191691909117905560405161052490816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600436101561001457600080fd5b600091823560e01c908163256fec881461039757508063329707101461029f57806356d5d475146101355763aafa0a871461004e57600080fd5b346101315761005c36610424565b600254855163fa31de0160e01b815291959293919060209082906001600160a01b0316818a816100928c8b8a8e600486016104a9565b03925af18015610127576100f2575b50917f10875372a03b7e5c7d46deb548b112c09c576e378c8f2daa3370a5cbe58c41b69460608363ffffffff96956100ec955197889716875260208701528501526060840191610488565b0390a180f35b60209081959492953d8311610120575b61010c81836103eb565b8101031261011c579192386100a1565b8580fd5b503d610102565b83513d89823e3d90fd5b5080fd5b50903461029c5761014536610424565b828555949192916001600160401b03861161028857600161016681546103b1565b601f8111610240575b5085601f88116001146101c457916100ec9391888899946000805160206104cf83398151915299916101b9575b50600019600386901b1c191684821b1790555b51948594856104a9565b90508301353861019c565b81875260208088209190601f198a169089905b828210610229575050916100ec9593918a6000805160206104cf8339815191529a9b96941061020f575b50508084811b0190556101af565b840135600019600387901b60f8161c191690553880610201565b808685968294968b013581550195019301906101d7565b81875260208720601f890160051c81019160208a1061027e575b601f0160051c019082905b82811061027357505061016f565b888155018290610265565b909150819061025a565b634e487b7160e01b85526041600452602485fd5b80fd5b503461013157816003193601126101315780518260019382600154916102c4836103b1565b8083526020978894600181169081156103765750600114610338575b50506102f292509593929503826103eb565b82519382859384528251928382860152825b84811061032257505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610304565b600186528486209492508591905b81831061035e5750889450508201016102f2386102e0565b85548884018501529485019487945091830191610346565b9150506102f294925060ff191682840152151560051b8201018692386102e0565b839034610131578160031936011261013157602091548152f35b90600182811c921680156103e1575b60208310146103cb57565b634e487b7160e01b600052602260045260246000fd5b91607f16916103c0565b601f909101601f19168101906001600160401b0382119082101761040e57604052565b634e487b7160e01b600052604160045260246000fd5b9060606003198301126104835760043563ffffffff811681036104835791602435916001600160401b03916044359083821161048357806023830112156104835781600401359384116104835760248483010111610483576024019190565b600080fd5b908060209392818452848401376000828201840152601f01601f1916010190565b6104cb949263ffffffff60609316825260208201528160408201520191610488565b9056fec9f92737086b645b21611169d04fa8cc1b05a453ea6a9befbf3930d619e23beca2646970667358221220acdf573dcc4adef2c18b7ebbb71a101b2d1ddf3f38edbc15b8c474a793798e3764736f6c63430008180033";

export class CrosschainMessager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _mailbox: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrosschainMessager> {
    return super.deploy(
      _mailbox,
      overrides || {}
    ) as Promise<CrosschainMessager>;
  }
  getDeployTransaction(
    _mailbox: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_mailbox, overrides || {});
  }
  attach(address: string): CrosschainMessager {
    return super.attach(address) as CrosschainMessager;
  }
  connect(signer: Signer): CrosschainMessager__factory {
    return super.connect(signer) as CrosschainMessager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrosschainMessagerInterface {
    return new utils.Interface(_abi) as CrosschainMessagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrosschainMessager {
    return new Contract(address, _abi, signerOrProvider) as CrosschainMessager;
  }
}
