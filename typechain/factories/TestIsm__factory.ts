/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestIsm, TestIsmInterface } from "../TestIsm";

const _abi = [
  {
    inputs: [],
    name: "moduleType",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_verify",
        type: "bool",
      },
    ],
    name: "setVerify",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608080604052346100255761010661ffff196000541617600055610168908161002b8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c9081636465e69f146100e357508063951a291f146100ae5763f7e83aee1461004257600080fd5b346100ab5760403660031901126100ab576001600160401b036004358181116100a757610073903690600401610100565b50506024359081116100a35760209161009260ff923690600401610100565b50505460081c166040519015158152f35b5080fd5b8280fd5b80fd5b50346100ab5760203660031901126100ab576004358015158091036100a35761ff0082549160081b169061ff00191617815580f35b9050346100a357816003193601126100a35760ff60209254168152f35b9181601f8401121561012d578235916001600160401b03831161012d576020838186019501011161012d57565b600080fdfea26469706673582212200ddfae6dfc72726fb857a913095ac78431244115ee4b90ae06f257bc891d0ee564736f6c63430008180033";

export class TestIsm__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestIsm> {
    return super.deploy(overrides || {}) as Promise<TestIsm>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestIsm {
    return super.attach(address) as TestIsm;
  }
  connect(signer: Signer): TestIsm__factory {
    return super.connect(signer) as TestIsm__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestIsmInterface {
    return new utils.Interface(_abi) as TestIsmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestIsm {
    return new Contract(address, _abi, signerOrProvider) as TestIsm;
  }
}
